{"version":3,"sources":["components/Button/Button.js","components/Input/Input.js","components/AddTask/AddTask.js","components/SideBar/SideBar.js","components/SortBar/SortBar.js","services/sortService.js","components/Icon/Icon.js","components/Modal/Modal.js","components/Task/Task.js","components/TaskList/TaskList.js","constants/storageConstants.js","components/App/App.js","index.js"],"names":["Button","onClickHandler","title","isDisabled","aditionalStyle","buttonStyle","onClick","className","disabled","Input","type","value","onChangeHandler","error","min","max","checked","inputs","text","id","placeholder","onChange","date","htmlFor","checkbox","AddTask","state","Date","toISOString","substring","important","handleInputChange","e","target","setState","handleSubmitButton","preventDefault","newTask","now","active","endDate","props","addTask","switchList","noValidate","this","Number","Component","SideBar","show","SortBar","searchTask","sortTasks","useState","sortBarIsopen","setSortBarIsopen","sortValue","setSortValue","searchName","setSearchName","openStyle","prevState","searchTaskByName","tasks","length","filter","item","toLowerCase","includes","tasksSortBy","sortDirection","sort","a","b","aDate","getTime","bDate","Icon","daysLeft","result","Math","ceil","getLeftDays","icon","abs","Modal","handleModalOpen","isOpen","task","display","Task","deleteTask","index","setDoneTask","setUndoneTask","deleted","setDeleted","open","setOpen","importantClass","deletedClass","handleToggleModal","document","getElementsByTagName","classList","toggle","setTimeout","TaskList","map","LOCALSTORAGE_KEY","App","filtered","findIndex","forEach","dataFromLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8bc9361.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClickHandler, title, isDisabled, buttonStyle }) => {\r\n  const aditionalStyle = buttonStyle || 'primary';\r\n\r\n  return (\r\n    <button onClick={onClickHandler} className={`${aditionalStyle}`} disabled={isDisabled}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\nconst Input = ({ type, value, onChangeHandler, error, min, max, checked }) => {\r\n  const inputs = {\r\n    text: (\r\n      <>\r\n        <input\r\n          type='text'\r\n          id='text'\r\n          placeholder='Add task'\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n        ></input>\r\n        {error && <p className='warning'>{error}</p>}\r\n      </>\r\n    ),\r\n    date: (\r\n      <>\r\n        <label htmlFor='date'>Deadline date:</label>\r\n        <input\r\n          type='date'\r\n          id='date'\r\n          min={min}\r\n          max={max}\r\n          value={value}\r\n          onChange={onChangeHandler}\r\n        ></input>\r\n      </>\r\n    ),\r\n    checkbox: (\r\n      <>\r\n        <input id='important' type='checkbox' checked={checked} onChange={onChangeHandler}></input>\r\n        <label>Important</label>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return <div className='input-wrapper'>{inputs[type]}</div>;\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from '../Button/Button';\r\nimport Input from '../Input/Input';\r\n\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: '',\r\n    date: new Date().toISOString().substring(0, 10),\r\n    important: false,\r\n    error: '',\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    if (e.target.type === 'checkbox') {\r\n      this.setState({\r\n        important: e.target.checked,\r\n      });\r\n    } else if (e.target.type === 'text') {\r\n      this.setState({\r\n        text: e.target.value,\r\n      });\r\n    } else if (e.target.type === 'date') {\r\n      this.setState({\r\n        date: e.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmitButton = (e) => {\r\n    const { text, date, important } = this.state;\r\n\r\n    e.preventDefault();\r\n\r\n    if (text) {\r\n      const newTask = {\r\n        id: Date.now(),\r\n        text,\r\n        active: true,\r\n        important,\r\n        date,\r\n        endDate: '',\r\n      };\r\n\r\n      this.props.addTask(newTask);\r\n\r\n      this.setState({\r\n        text: '',\r\n        date: new Date().toISOString().substring(0, 10),\r\n        important: false,\r\n        error: '',\r\n      });\r\n\r\n      this.props.switchList(true);\r\n    } else {\r\n      this.setState({\r\n        error: 'Write task first',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='menu-wrapper'>\r\n        <h1 className='form-title'>Tasks Manager</h1>\r\n        <form className='form-wrapper' noValidate>\r\n          <Input\r\n            type='text'\r\n            value={this.state.text}\r\n            onChangeHandler={(e) => this.handleInputChange(e)}\r\n            error={this.state.error}\r\n          />\r\n          <Input\r\n            type='date'\r\n            value={this.state.date}\r\n            onChangeHandler={(e) => this.handleInputChange(e)}\r\n            min={this.state.date}\r\n            max={`${Number(this.state.date.substring(0, 4)) + 1}-12-31`}\r\n          />\r\n          <Input\r\n            type='checkbox'\r\n            checked={this.state.important}\r\n            onChangeHandler={(e) => this.handleInputChange(e)}\r\n          />\r\n          <Button title='Add Task' onClickHandler={(e) => this.handleSubmitButton(e)} />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nimport './SideBar.css';\r\n\r\nconst SideBar = ({ switchList, show }) => {\r\n  const isDisabled = show ? true : false;\r\n\r\n  return (\r\n    <div className='sidebar-wrapper'>\r\n      <Button\r\n        buttonStyle='sidebar'\r\n        isDisabled={!isDisabled}\r\n        onClickHandler={() => switchList(!show)}\r\n        title='done'\r\n      />\r\n      <Button\r\n        buttonStyle='sidebar'\r\n        isDisabled={isDisabled}\r\n        onClickHandler={() => switchList(!show)}\r\n        title='active'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import React, { useState } from 'react';\r\nimport Button from '../Button/Button';\r\n\r\nimport './SortBar.css';\r\n\r\nconst SortBar = ({ searchTask, sortTasks }) => {\r\n  const [sortBarIsopen, setSortBarIsopen] = useState(false);\r\n  const [sortValue, setSortValue] = useState(false);\r\n  const [searchName, setSearchName] = useState('');\r\n\r\n  const openStyle = sortBarIsopen ? 'open' : '';\r\n\r\n  const handleSearchInputChanage = (e) => {\r\n    const text = e.target.value || '';\r\n    setSearchName(text);\r\n    searchTask(text);\r\n  };\r\n\r\n  const handleSortByAddDate = () => {\r\n    setSortValue((prevState) => !prevState);\r\n    sortTasks('index', sortValue);\r\n  };\r\n\r\n  const handleSortByDeadlineDate = () => {\r\n    setSortValue((prevState) => !prevState);\r\n    sortTasks('deadline', sortValue);\r\n  };\r\n\r\n  const handleSortByEndDate = () => {\r\n    setSortValue((prevState) => !prevState);\r\n    sortTasks('end', sortValue);\r\n  };\r\n\r\n  const handleToggleSortBarOpen = () => {\r\n    setSortBarIsopen((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={`sortbar-tooltip ${openStyle}`}>\r\n      <div className='sortbar-pin-wrapper' onClick={handleToggleSortBarOpen}>\r\n        <div className='sortbar-pin'></div>\r\n        <div className='sortbar-pin'></div>\r\n        <div className='sortbar-pin'></div>\r\n      </div>\r\n      <div className={`sortbar-content-wrapper ${openStyle}`}>\r\n        <input\r\n          className='sortbar-input'\r\n          type='text'\r\n          placeholder='Search...'\r\n          value={searchName}\r\n          onChange={handleSearchInputChanage}\r\n        />\r\n        <Button\r\n          title='sort by add date'\r\n          buttonStyle='sortbar'\r\n          onClickHandler={handleSortByAddDate}\r\n        />\r\n        <Button\r\n          title='sort by deadline date'\r\n          buttonStyle='sortbar'\r\n          onClickHandler={handleSortByDeadlineDate}\r\n        />\r\n        <Button\r\n          title='sort by end date'\r\n          buttonStyle='sortbar'\r\n          onClickHandler={handleSortByEndDate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortBar;\r\n","export const getLeftDays = (date) => {\r\n  const endDateTime = new Date(date).getTime();\r\n  const currentTime = Date.now();\r\n  const day = 1000 * 60 * 60 * 24;\r\n\r\n  const result = endDateTime - currentTime;\r\n  return Math.ceil(result / day);\r\n};\r\n\r\nexport const searchTaskByName = (tasks, text) => {\r\n  if (text && text.length) {\r\n    return tasks.filter((item) => item.text.toLowerCase().includes(text.toLowerCase()));\r\n  }\r\n  return tasks;\r\n};\r\n\r\nexport const tasksSortBy = (tasks, sortValue, sortDirection) => {\r\n  if (sortValue === 'index') {\r\n    return tasks.sort((a, b) => {\r\n      return sortDirection ? a.id - b.id : b.id - a.id;\r\n    });\r\n  } else if (sortValue === 'deadline') {\r\n    return tasks.sort((a, b) => {\r\n      const aDate = new Date(a.date).getTime();\r\n      const bDate = new Date(b.date).getTime();\r\n\r\n      return sortDirection ? bDate - aDate : aDate - bDate;\r\n    });\r\n  } else if (sortValue === 'end') {\r\n    return tasks.sort((a, b) => {\r\n      const aDate = new Date(a.endDate).getTime();\r\n      const bDate = new Date(b.endDate).getTime();\r\n\r\n      return sortDirection ? bDate - aDate : aDate - bDate;\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nimport './Icon.css';\r\n\r\nimport { getLeftDays } from '../../services/sortService';\r\n\r\nconst Icon = ({ date }) => {\r\n  let daysLeft = getLeftDays(date);\r\n  let icon = '';\r\n  let text = 'days left';\r\n\r\n  if (daysLeft < 0) {\r\n    icon = <i className='far fa-frown'></i>;\r\n    daysLeft = Math.abs(daysLeft);\r\n    text = 'days after deadline';\r\n  } else if (daysLeft > 0) {\r\n    icon = <i className='far fa-smile'></i>;\r\n  } else {\r\n    icon = <i className='far fa-meh'></i>;\r\n  }\r\n\r\n  return (\r\n    <div className='tooltip'>\r\n      {icon}\r\n      <div className='tooltiptext'>\r\n        {daysLeft} {text}\r\n      </div>\r\n      <div className='tooltiparrow'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React, { useState } from 'react';\r\n\r\nimport Button from '../Button/Button';\r\nimport Input from '../Input/Input';\r\n\r\nimport './Modal.css';\r\n\r\nconst Modal = ({ addTask, handleModalOpen, isOpen, task }) => {\r\n  const [state, setState] = useState({\r\n    text: task.text,\r\n    date: task.date,\r\n    important: task.important,\r\n  });\r\n\r\n  const display = isOpen ? 'open' : '';\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value, id } = e.target;\r\n\r\n    if (id === 'important') {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state.important,\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmitButton = (e) => {\r\n    const { text, date, important } = state;\r\n\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      id: task.id,\r\n      text: task.text,\r\n      date: task.date,\r\n      active: true,\r\n      important: task.important,\r\n      endDate: '',\r\n    };\r\n\r\n    if (task.text !== text && text) {\r\n      newTask.text = text;\r\n    }\r\n\r\n    if (task.date !== date && date) {\r\n      newTask.date = date;\r\n    }\r\n\r\n    if (task.important !== important) {\r\n      newTask.important = important;\r\n    }\r\n\r\n    addTask(newTask);\r\n    handleModalOpen();\r\n    setState({\r\n      text: newTask.text,\r\n      date: newTask.date,\r\n      important: newTask.important,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`modal-background ${display}`}>\r\n      <div className='modal-content'>\r\n        <Button title='x' buttonStyle='close' onClickHandler={handleModalOpen} />\r\n        <h3 className='modal-title'>Edit task</h3>\r\n        <form className='modal-form-wrapper' noValidate>\r\n          <Input type='text' value={state.text} onChangeHandler={handleInputChange} />\r\n          <Input\r\n            type='date'\r\n            value={state.date}\r\n            onChangeHandler={handleInputChange}\r\n            min={new Date().toISOString().substring(0, 10)}\r\n            max={`${Number(new Date().toISOString().substring(0, 10).substring(0, 4)) + 1}-12-31`}\r\n          />\r\n          <Input type='checkbox' checked={state.important} onChangeHandler={handleInputChange} />\r\n          <Button title='Add Task' onClickHandler={handleSubmitButton} />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\n\r\nimport Button from '../Button/Button';\r\nimport Icon from '../Icon/Icon';\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport './Task.css';\r\n\r\nconst Task = ({ addTask, deleteTask, index, setDoneTask, setUndoneTask, task }) => {\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { active, important } = task;\r\n\r\n  const importantClass = important && active ? 'important' : '';\r\n  const deletedClass = deleted ? 'deleted' : '';\r\n\r\n  const handleDeleteButton = () => {\r\n    setDeleted(true);\r\n    setTimeout(() => deleteTask(task.id), 3000);\r\n  };\r\n\r\n  const handleDoneButton = () => {\r\n    setDoneTask(task.id);\r\n  };\r\n\r\n  const handleToggleModal = () => {\r\n    const [body] = [...document.getElementsByTagName('body')];\r\n    body.classList.toggle('disable-scroll');\r\n    setOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleUndoneTask = () => {\r\n    setUndoneTask(task.id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {open && (\r\n        <Modal isOpen={open} handleModalOpen={handleToggleModal} task={task} addTask={addTask} />\r\n      )}\r\n\r\n      <div className={`task-wrapper ${importantClass} ${deletedClass}`}>\r\n        <span className='task-index'>{index + 1}</span>\r\n        <p className='task-text'>\r\n          <span className='task-title'>\"{task.text}\"</span>\r\n          <span>{active ? ' - do until: ' : ' - Done: '}</span>\r\n          <em className='task-date'>{active ? `${task.date} ` : `${task.endDate}`}</em>\r\n        </p>\r\n        {active ? (\r\n          <>\r\n            <Icon date={task.date} />\r\n            <Button title='done' onClickHandler={handleDoneButton} isDisabled={deleted} />\r\n            <Button title='edit' onClickHandler={handleToggleModal} isDisabled={deleted} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button title='undone' onClickHandler={handleUndoneTask} />\r\n          </>\r\n        )}\r\n        <Button\r\n          title='x'\r\n          onClickHandler={handleDeleteButton}\r\n          buttonStyle='close'\r\n          isDisabled={deleted}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport './TaskList.css';\r\n\r\nimport Task from '../Task/Task';\r\n\r\nconst TaskList = ({ addTask, deleteTask, setDoneTask, setUndoneTask, show, tasks }) => {\r\n  if (show) {\r\n    tasks = tasks.filter((task) => task.active);\r\n  } else {\r\n    tasks = tasks.filter((task) => !task.active);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='tasklist-wrapper'>\r\n        <div className='tasks-wrapper'>\r\n          <h2 className='tasks-title'>{show ? 'Active tasks' : 'Done tasks'}</h2>\r\n          {!tasks.length ? <h3 className='tasks-info'>No tasks yet..</h3> : null}\r\n          {tasks.map((task, index) => (\r\n            <Task\r\n              key={task.id}\r\n              index={index}\r\n              task={task}\r\n              addTask={addTask}\r\n              deleteTask={deleteTask}\r\n              setDoneTask={setDoneTask}\r\n              setUndoneTask={setUndoneTask}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","export const LOCALSTORAGE_KEY = 'tasks';\r\n","import React, { Component } from 'react';\n\nimport AddTask from '../AddTask/AddTask';\nimport SideBar from '../SideBar/SideBar';\nimport SortBar from '../SortBar/SortBar';\nimport TaskList from '../TaskList/TaskList';\n\nimport { LOCALSTORAGE_KEY } from '../../constants/storageConstants';\n\nimport { searchTaskByName, tasksSortBy } from '../../services/sortService';\n\nclass App extends Component {\n  state = {\n    tasks: [],\n    show: true,\n    filtered: [],\n  };\n\n  addTask = (task) => {\n    const index = this.state.tasks.findIndex((item) => item.id === task.id);\n\n    if (index > -1) {\n      const tasks = this.state.tasks.map((item) => {\n        if (item.id === task.id) {\n          return task;\n        }\n        return item;\n      });\n\n      this.setState({\n        tasks,\n        filtered: tasks,\n      });\n    } else {\n      const tasks = [...this.state.tasks, task];\n\n      this.setState({\n        tasks,\n        filtered: tasks,\n      });\n    }\n  };\n\n  deleteTask = (id) => {\n    const tasks = this.state.tasks.filter((task) => task.id !== id);\n    this.setState({\n      tasks,\n      filtered: tasks,\n    });\n  };\n\n  searchTask = (text) => {\n    const filtered = searchTaskByName(this.state.tasks, text);\n\n    this.setState({\n      filtered,\n    });\n  };\n\n  setDoneTask = (id) => {\n    const tasks = [...this.state.tasks];\n    const date = new Date().toISOString();\n\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.endDate = date.substring(0, 10) + ' ' + date.substring(11, 19);\n      }\n    });\n\n    this.setState({\n      tasks,\n      filtered: tasks,\n    });\n  };\n\n  setUndoneTask = (id) => {\n    const tasks = [...this.state.tasks];\n\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = true;\n        task.endDate = '';\n      }\n    });\n\n    this.setState({\n      tasks,\n      filtered: tasks,\n    });\n  };\n\n  sortTasks = (sortValue, sortDirection) => {\n    const tasks = tasksSortBy(this.state.filtered, sortValue, sortDirection);\n\n    this.setState({\n      filtered: tasks,\n    });\n  };\n\n  switchList = (show) => {\n    this.setState({\n      show,\n    });\n  };\n\n  componentDidMount() {\n    const dataFromLocalStorage = localStorage.getItem(LOCALSTORAGE_KEY);\n    if (dataFromLocalStorage) {\n      this.setState({\n        tasks: JSON.parse(dataFromLocalStorage),\n        filtered: JSON.parse(dataFromLocalStorage),\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(this.state.tasks));\n  }\n\n  render() {\n    const { show, filtered } = this.state;\n\n    return (\n      <>\n        <AddTask addTask={this.addTask} switchList={this.switchList} />\n        <SideBar switchList={this.switchList} show={show} />\n        <SortBar sortTasks={this.sortTasks} searchTask={this.searchTask} />\n        <TaskList\n          tasks={filtered}\n          show={show}\n          addTask={this.addTask}\n          deleteTask={this.deleteTask}\n          setDoneTask={this.setDoneTask}\n          setUndoneTask={this.setUndoneTask}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}